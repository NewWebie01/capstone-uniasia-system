- name: Dump database (force IPv4 + SSL)
  env:
    DATABASE_URL: ${{ secrets.SUPABASE_DB_URL }}
  run: |
    set -e

    # 1) Extract host/port/db/user/pass from the URI (basic, works for standard Supabase URIs)
    URI="$DATABASE_URL"
    HOST=$(echo "$URI" | sed -E 's#.*@([^:/?]+).*#\1#')
    PORT=$(echo "$URI" | sed -E 's#.*:([0-9]+)/.*#\1#')
    DB=$(echo "$URI"   | sed -E 's#.*/([^/?]+).*#\1#')
    USER=$(echo "$URI" | sed -E 's#postgresql://([^:]+):.*#\1#')
    PASS=$(echo "$URI" | sed -E 's#postgresql://[^:]+:([^@]+)@.*#\1#')

    # 2) Resolve **IPv4** address (avoid IPv6 on runners)
    ADDR=$(getent ahostsv4 "$HOST" | awk '{print $1; exit}')
    echo "Resolved $HOST -> $ADDR (IPv4)"

    # 3) Tell libpq to use IPv4 + SSL
    export PGHOST="$HOST"
    export PGHOSTADDR="$ADDR"
    export PGPORT="$PORT"
    export PGDATABASE="$DB"
    export PGUSER="$USER"
    export PGPASSWORD="$PASS"
    export PGSSLMODE="require"

    mkdir -p backups
    TS=$(date -u +"%Y-%m-%dT%H-%M-%SZ")
    pg_dump --schema-only > "backups/schema_$TS.sql"
    pg_dump --data-only  > "backups/data_$TS.sql"
    tar -czf "supabase-backup_$TS.tar.gz" -C backups .
    rm -rf backups
